/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jarvis;

import outputstream.SystemSounds;
import outputstream.BlackBoard;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;

import javax.swing.JEditorPane;
import javax.swing.JScrollPane;
import javax.swing.ScrollPaneConstants;
import javax.swing.Timer;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;
import static outputstream.BlackBoard.screenSize;

/**
 *
 * @author owoye001
 */
public class ProgressPanel extends javax.swing.JPanel {

    private JEditorPane jEditorPaneLoad;
    private JScrollPane jScrollPaneLoad;
    
    //screen size variables 
    public static int IMG_WIDTH = BlackBoard.screenSize.width;
    public static int IMG_HEIGHT = BlackBoard.screenSize.height;
    
    //timer to control flow of instruction into the jeditorpane
    public Timer loadHtmlNicely;
    public HTMLDocument htmlDoc;
    
    public int entry = 0;
    public Document blank;
    SystemSounds programload; //to play sounds

    /**
     * Creates new form ProgressPanel
     *
     * @param loadListArrayList
     */
    public ProgressPanel(ArrayList loadListArrayList) {
        initComponents();
        loadHtmlNicely = new Timer(0, null);

        reInitializeComponents(loadListArrayList);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(0, 102, 0));
        setOpaque(false);
        setLayout(null);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private void reInitializeComponents(ArrayList loadListArrayList) {

        jEditorPaneLoad = new JEditorPane();
        jScrollPaneLoad = new JScrollPane(jEditorPaneLoad);

        jScrollPaneLoad.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPaneLoad.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jEditorPaneLoad.setBorder(null);
        jEditorPaneLoad.setContentType("text/html");
        jEditorPaneLoad.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        jEditorPaneLoad.setEditable(false);
        jEditorPaneLoad.setAutoscrolls(true);

        //adding a way to load html into editor
        // add a HTMLEditorKit to the editor pane
        HTMLEditorKit pressPanelKit = new HTMLEditorKit();
        jEditorPaneLoad.setEditorKit(pressPanelKit);

        jEditorPaneLoad.setName("");
        jScrollPaneLoad.getViewport().setOpaque(false);

        jScrollPaneLoad.setBounds(0, 0, screenSize.width, screenSize.height);
        jEditorPaneLoad.setBounds(0, 0, screenSize.width, screenSize.height);

        // add some styles to the html
        StyleSheet styleSheetLittleLoads = pressPanelKit.getStyleSheet();
        styleSheetLittleLoads.addRule("body {background-color: #000; text-align: right; font-size: 120px; color:#fff; font-family: Arial; margin: 20px; padding: 20px; }");
        styleSheetLittleLoads.addRule("h1 {font-size: .7em; color: #000; text-align: right; }"); //blue
        styleSheetLittleLoads.addRule("h2 {color: #fff; font-size: .5em; text-align: right; }"); //white
        styleSheetLittleLoads.addRule("h3 {color: #ff0000; font-size: .4em; text-align: right; }"); //red

        // create a document, set it on the jeditorpane, then add the html
        Document docCaptureScreen = pressPanelKit.createDefaultDocument();
        jEditorPaneLoad.setDocument(docCaptureScreen);

        //resize image before loading
        IMG_WIDTH = BlackBoard.screenSize.width;
        IMG_HEIGHT = BlackBoard.screenSize.height;

        //loading html here
        jEditorPaneLoad.setText("<html><body></body></html>");

        //inserting element here
        htmlDoc = (HTMLDocument) jEditorPaneLoad.getDocument();
        
        loadHtmlNicely = new Timer(50, (ActionEvent e) -> {
            try {
                //for speed optimization
                blank = new HTMLDocument();
                 jEditorPaneLoad.setDocument(blank);

                // pressPanelKit.read(new StringReader("" + new Random().nextInt() +""), htmlDoc, 1);
                pressPanelKit.read(new StringReader(loadListArrayList.get(entry).toString()), htmlDoc, 1);
                entry++;
                if (entry > loadListArrayList.size() - 1) {
                    loadHtmlNicely.stop();
                }
                
                 jEditorPaneLoad.setDocument(docCaptureScreen);
            } catch (IOException | IndexOutOfBoundsException | BadLocationException ex) {
                // Logger.getLogger(ProgressPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
        loadHtmlNicely.start();
        
         programload = new SystemSounds("longrenderingtask");
                        programload.playonloop();

        //jEditorPaneLoad.setText(htmlString);
        add(jScrollPaneLoad);

    }

}
